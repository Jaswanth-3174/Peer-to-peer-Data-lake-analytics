{"ast":null,"code":"var _jsxFileName = \"E:\\\\P2P_DataLake\\\\frontend\\\\src\\\\components\\\\QueryInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryInterface = ({\n  onExecuteQuery,\n  loading\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [queryHistory, setQueryHistory] = useState([]);\n  const sampleQueries = [{\n    name: \"All Employees\",\n    query: \"SELECT * FROM employees\"\n  }, {\n    name: \"Product Categories\",\n    query: \"SELECT category, COUNT(*) as count, AVG(price) as avg_price FROM products GROUP BY category\"\n  }, {\n    name: \"Order Summary\",\n    query: \"SELECT COUNT(*) as total_orders, SUM(total_amount) as total_revenue FROM orders\"\n  }, {\n    name: \"Customer Reviews\",\n    query: \"SELECT rating, COUNT(*) as count FROM reviews GROUP BY rating ORDER BY rating\"\n  }, {\n    name: \"Top Cities by Salary\",\n    query: \"SELECT city, AVG(salary) as avg_salary FROM employees GROUP BY city ORDER BY avg_salary DESC\"\n  }];\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim()) {\n      onExecuteQuery(query);\n      setQueryHistory(prev => [query, ...prev.slice(0, 9)]); // Keep last 10 queries\n    }\n  };\n  const handleSampleQuery = sampleQuery => {\n    setQuery(sampleQuery);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-gray-800\",\n      children: \"SQL Query Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-700 mb-2\",\n        children: \"Sample Queries:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: sampleQueries.map((sample, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSampleQuery(sample.query),\n          className: \"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded-full text-gray-700 transition-colors\",\n          children: sample.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"query\",\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"SQL Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"query\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Enter your SQL query here...\",\n          className: \"w-full h-32 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 font-mono text-sm\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Query will be executed across all selected peers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !query.trim(),\n          className: `px-6 py-2 rounded-md font-medium transition-colors ${loading || !query.trim() ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-primary-600 hover:bg-primary-700 text-white'}`,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), \"Executing...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this) : 'Execute Query'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), queryHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-medium text-gray-700 mb-2\",\n        children: \"Recent Queries:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: queryHistory.slice(0, 3).map((historyQuery, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setQuery(historyQuery),\n          className: \"text-xs text-gray-600 bg-gray-50 p-2 rounded cursor-pointer hover:bg-gray-100 font-mono truncate\",\n          children: historyQuery\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryInterface, \"vpQm2j7RHahRhupbTQXbdKYahh8=\");\n_c = QueryInterface;\nexport default QueryInterface;\nvar _c;\n$RefreshReg$(_c, \"QueryInterface\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QueryInterface","onExecuteQuery","loading","_s","query","setQuery","queryHistory","setQueryHistory","sampleQueries","name","handleSubmit","e","preventDefault","trim","prev","slice","handleSampleQuery","sampleQuery","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","sample","index","onClick","onSubmit","htmlFor","id","value","onChange","target","placeholder","disabled","type","length","historyQuery","_c","$RefreshReg$"],"sources":["E:/P2P_DataLake/frontend/src/components/QueryInterface.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst QueryInterface = ({ onExecuteQuery, loading }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [queryHistory, setQueryHistory] = useState([]);\r\n\r\n  const sampleQueries = [\r\n    {\r\n      name: \"All Employees\",\r\n      query: \"SELECT * FROM employees\"\r\n    },\r\n    {\r\n      name: \"Product Categories\",\r\n      query: \"SELECT category, COUNT(*) as count, AVG(price) as avg_price FROM products GROUP BY category\"\r\n    },\r\n    {\r\n      name: \"Order Summary\",\r\n      query: \"SELECT COUNT(*) as total_orders, SUM(total_amount) as total_revenue FROM orders\"\r\n    },\r\n    {\r\n      name: \"Customer Reviews\",\r\n      query: \"SELECT rating, COUNT(*) as count FROM reviews GROUP BY rating ORDER BY rating\"\r\n    },\r\n    {\r\n      name: \"Top Cities by Salary\",\r\n      query: \"SELECT city, AVG(salary) as avg_salary FROM employees GROUP BY city ORDER BY avg_salary DESC\"\r\n    }\r\n  ];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (query.trim()) {\r\n      onExecuteQuery(query);\r\n      setQueryHistory(prev => [query, ...prev.slice(0, 9)]); // Keep last 10 queries\r\n    }\r\n  };\r\n\r\n  const handleSampleQuery = (sampleQuery) => {\r\n    setQuery(sampleQuery);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">\r\n        SQL Query Interface\r\n      </h2>\r\n      \r\n      {/* Sample Queries */}\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Sample Queries:</h3>\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          {sampleQueries.map((sample, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleSampleQuery(sample.query)}\r\n              className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded-full text-gray-700 transition-colors\"\r\n            >\r\n              {sample.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Query Input */}\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <div>\r\n          <label htmlFor=\"query\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            SQL Query\r\n          </label>\r\n          <textarea\r\n            id=\"query\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            placeholder=\"Enter your SQL query here...\"\r\n            className=\"w-full h-32 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 font-mono text-sm\"\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"flex justify-between items-center\">\r\n          <div className=\"text-sm text-gray-500\">\r\n            Query will be executed across all selected peers\r\n          </div>\r\n          \r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading || !query.trim()}\r\n            className={`px-6 py-2 rounded-md font-medium transition-colors ${\r\n              loading || !query.trim()\r\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                : 'bg-primary-600 hover:bg-primary-700 text-white'\r\n            }`}\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center\">\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                Executing...\r\n              </div>\r\n            ) : (\r\n              'Execute Query'\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Query History */}\r\n      {queryHistory.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Recent Queries:</h3>\r\n          <div className=\"space-y-1\">\r\n            {queryHistory.slice(0, 3).map((historyQuery, index) => (\r\n              <div\r\n                key={index}\r\n                onClick={() => setQuery(historyQuery)}\r\n                className=\"text-xs text-gray-600 bg-gray-50 p-2 rounded cursor-pointer hover:bg-gray-100 font-mono truncate\"\r\n              >\r\n                {historyQuery}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueryInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}